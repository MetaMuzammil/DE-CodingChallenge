AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Weather data processing system'

Resources:
  RawBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${AWS::StackName}-raw-bucket'

  ProcessedBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${AWS::StackName}-processed-bucket'

  AthenaOutputBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${AWS::StackName}-athena-output-bucket'

  WeatherRetrievalLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-weather-retrieval'
      Handler: weather_retreiever.lambda_handler
      Role: !GetAtt DataLambdaExecutionRole.Arn
      CodeUri: ./lambda-python/weather_retreiever.py
      Runtime: python3.8
      Timeout: 120
      Layers:
        - !Ref WeatherRetrievalLambdaLayer
      Environment:
        Variables:
          RAW_BUCKET: !Ref RawBucket
          PARTITION_LAMBDA_ARN: !GetAtt DataPartitionLambda.Arn
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: 'rate(1 hour)'
            Enabled: true

  WeatherRetrievalLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: weather-au-layer
      Description: Layer containing the weather_au library
      ContentUri: weather_au_layer.zip
      CompatibleRuntimes:
        - python3.8

  LocationListParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: LocationList
      Type: StringList
      Value: "3052,2000,4000"

  DataPartitionLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-data-partition'
      Handler: partition_lambda.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      CodeUri: ./lambda-python/partition_lambda.py
      Runtime: python3.8
      Timeout: 120
      Environment:
        Variables:
          RAW_BUCKET: !Ref RawBucket
          PROCESSED_BUCKET: !Ref ProcessedBucket
          GLUE_ROLE_ARN: !GetAtt GlueCrawlerRole.Arn
          ATHENA_DATABASE: 'weather_database'

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:DeleteObject'
                Resource:
                  - !GetAtt RawBucket.Arn
                  - !Join ['', [!GetAtt RawBucket.Arn, '/*']]
                  - !GetAtt ProcessedBucket.Arn
                  - !Join ['', [!GetAtt ProcessedBucket.Arn, '/*']]
                  - !GetAtt AthenaOutputBucket.Arn
                  - !Join ['', [!GetAtt AthenaOutputBucket.Arn, '/*']]
        - PolicyName: AthenaAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - athena:*
                Resource: '*'
        - PolicyName: GlueAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'glue:*'
                Resource: '*'
        - PolicyName: IAMPassRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: !GetAtt GlueCrawlerRole.Arn

  DataLambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:DeleteObject'
                Resource:
                  - !GetAtt RawBucket.Arn
                  - !Join ['', [!GetAtt RawBucket.Arn, '/*']]
                  - !GetAtt ProcessedBucket.Arn
                  - !Join ['', [!GetAtt ProcessedBucket.Arn, '/*']]
                  - !GetAtt AthenaOutputBucket.Arn
                  - !Join ['', [!GetAtt AthenaOutputBucket.Arn, '/*']]
        - PolicyName: AthenaAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - athena:*
                Resource: '*'
        - PolicyName: lambdaInvocationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action: "lambda:InvokeFunction"
                Resource: !GetAtt DataPartitionLambda.Arn
        - PolicyName: SSMAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetParameter'
                Resource: '*'

  GlueDatabase:
    Type: "AWS::Glue::Database"
    Properties:
      CatalogId: !Ref "AWS::AccountId"
      DatabaseInput:
        Name: "weather_database"

  GlueCrawlerRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "glue.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "GlueCrawlerPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:ListBucket"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "glue:*"
                Resource: "*"